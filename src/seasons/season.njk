---
layout: base.njk
pagination:
    data: site.years
    size: 1
    alias: year
permalink: "/seasons/{{ year }}/"
eleventyComputed:
    title: "{{ year }} Projection Accuracy"
---

{% set battingStats = [
  { name: 'wOBA', stat: 'wOBA', isVolume: false },
  { name: 'Strikeout Rate', stat: 'SO/PA', isVolume: false },
  { name: 'Walk Rate', stat: 'BB/PA', isVolume: false },
  { name: 'Hit By Pitch Rate', stat: 'HBP/PA', isVolume: false },
  { name: 'Home Run Rate', stat: 'HR/BIP', isVolume: false },
  { name: 'BABIP', stat: 'BABIP', isVolume: false },
  { name: 'Single Rate', stat: '1B/(BIP-HR)', isVolume: false },
  { name: 'Double Rate', stat: '2B/(BIP-HR)', isVolume: false },
  { name: 'Triple Rate', stat: '3B/(BIP-HR)', isVolume: false },
  { name: 'Run Rate', stat: 'R/PA', isVolume: false },
  { name: 'RBI Rate', stat: 'RBI/PA', isVolume: false },
  { name: 'Stolen Base Rate', stat: 'SB/TOF', isVolume: false },
  { name: 'Batting Average', stat: 'AVG', isVolume: false },
  { name: 'On-Base Percentage', stat: 'OBP', isVolume: false },
  { name: 'Slugging Percentage', stat: 'SLG', isVolume: false }
] %}

{% set pitchingStats = [
  { name: 'wOBA', stat: 'wOBA', isVolume: false },
  { name: 'Strikeout Rate', stat: 'SO/BF', isVolume: false },
  { name: 'Walk Rate', stat: 'BB/BF', isVolume: false },
  { name: 'Hit By Pitch Rate', stat: 'HBP/BF', isVolume: false },
  { name: 'Home Run Rate', stat: 'HR/BIP', isVolume: false },
  { name: 'BABIP', stat: 'BABIP', isVolume: false },
  { name: 'Single Rate', stat: '1B/(BIP-HR)', isVolume: false },
  { name: 'Double Rate', stat: '2B/(BIP-HR)', isVolume: false },
  { name: 'Triple Rate', stat: '3B/(BIP-HR)', isVolume: false },
  { name: 'Run Rate', stat: 'R/BF', isVolume: false },
  { name: 'Earned Run Rate', stat: 'ER/BF', isVolume: false },
  { name: 'Win Rate', stat: 'W/G', isVolume: false },
  { name: 'Loss Rate', stat: 'L/G', isVolume: false },
  { name: 'Save Rate', stat: 'SV/G', isVolume: false },
  { name: 'Hold Rate', stat: 'HLD/G', isVolume: false },
  { name: 'ERA', stat: 'ERA', isVolume: false },
  { name: 'WHIP', stat: 'WHIP', isVolume: false }
] %}

{% set metrics = [
  { value: 'MAE', name: 'MAE', title: 'MAE' },
  { value: 'RMSE', name: 'RMSE', title: 'RMSE'}
] %}

{% set adjustments = [
  { value: 'weighted-league-adj', name: 'Weighted League-Adjusted' },
  { value: 'league-adj', name: 'League-Adjusted' },
  { value: 'raw', name: 'Raw' }
] %}

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="text-center mb-12">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">{{ year }} Projection Evaluation</h1>
    </div>

    <!-- Batting Section -->
    <div class="space-y-8 mb-12">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Batting Projection Accuracy</h2>

      <!-- Batting Volume Section -->
      <div class="chart-section mb-8">
        <div class="mb-4 py-4">
          <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Plate Appearances (PA)</h4>
          <div class="flex flex-wrap gap-4">
            <select class="metric-select px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white">
              {% for metric in metrics %}<option value="{{ metric.value }}">{{ metric.title }}</option>{% endfor %}
            </select>
          </div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="raw">
          <div class="h-80"><canvas id="battingVolumeMaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="raw">
          <div class="h-80"><canvas id="battingVolumeRmseChart"></canvas></div>
        </div>
      </div>

      <!-- Individual Batting Rate Stats -->
      {% for statInfo in battingStats %}
      <div class="chart-section mb-8">
        <div class="mb-4 py-4">
          <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">{{ statInfo.name }} ({{ statInfo.stat }})</h4>
          <div class="flex flex-wrap gap-4">
            <select class="metric-select px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white">
              {% for metric in metrics %}<option value="{{ metric.value }}">{{ metric.title }}</option>{% endfor %}
            </select>
            <select class="adjustment-select px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white">
              {% for adj in adjustments %}<option value="{{ adj.value }}">{{ adj.name }}</option>{% endfor %}
            </select>
          </div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="raw">
          <div class="h-80"><canvas id="batting{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}MaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="raw">
          <div class="h-80"><canvas id="batting{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}RmseChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="league-adj">
          <div class="h-80"><canvas id="batting{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}LeagueAdjMaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="league-adj">
          <div class="h-80"><canvas id="batting{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}LeagueAdjRmseChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="weighted-league-adj">
          <div class="h-80"><canvas id="batting{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}WLAMaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="weighted-league-adj">
          <div class="h-80"><canvas id="batting{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}WLARmseChart"></canvas></div>
        </div>
      </div>
      {% endfor %}
    </div>

    <!-- Pitching Section -->
    <div class="space-y-8 mb-12">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Pitching Projection Accuracy</h2>

      <!-- Pitching Volume Section -->
      <div class="chart-section mb-8">
        <div class="mb-4 py-4">
          <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Batters Faced (BF)</h4>
          <div class="flex flex-wrap gap-4">
            <select class="metric-select px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white">
              {% for metric in metrics %}<option value="{{ metric.value }}">{{ metric.title }}</option>{% endfor %}
            </select>
          </div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="raw">
          <div class="h-80"><canvas id="pitchingVolumeMaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="raw">
          <div class="h-80"><canvas id="pitchingVolumeRmseChart"></canvas></div>
        </div>
      </div>

      <!-- Individual Pitching Rate Stats -->
      {% for statInfo in pitchingStats %}
      <div class="chart-section mb-8">
        <div class="mb-4 py-4">
          <h4 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">{{ statInfo.name }} ({{ statInfo.stat }})</h4>
          <div class="flex flex-wrap gap-4">
            <select class="metric-select px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white">
              {% for metric in metrics %}<option value="{{ metric.value }}">{{ metric.title }}</option>{% endfor %}
            </select>
            <select class="adjustment-select px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-white">
              {% for adj in adjustments %}<option value="{{ adj.value }}">{{ adj.name }}</option>{% endfor %}
            </select>
          </div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="raw">
          <div class="h-80"><canvas id="pitching{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}MaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="raw">
          <div class="h-80"><canvas id="pitching{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}RmseChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="league-adj">
          <div class="h-80"><canvas id="pitching{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}LeagueAdjMaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="league-adj">
          <div class="h-80"><canvas id="pitching{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}LeagueAdjRmseChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="MAE" data-adjustment="weighted-league-adj">
          <div class="h-80"><canvas id="pitching{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}WLAMaeChart"></canvas></div>
        </div>
        <div class="chart-container bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-6" data-metric="RMSE" data-adjustment="weighted-league-adj">
          <div class="h-80"><canvas id="pitching{{ statInfo.stat | replace("/", "") | replace("(", "") | replace(")", "") | replace("-", "") }}WLARmseChart"></canvas></div>
        </div>
      </div>
      {% endfor %}
    </div>

    <!-- Biggest Misses Section -->
    <div class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Biggest Misses - {{ year }}</h2>

        {% set yearData = years[year] %}
        {% if yearData %}
            {% set proj_colors = {
                'Marcel': 'text-red-600 dark:text-red-400',
                'Steamer': 'text-indigo-600 dark:text-indigo-400',
                'ZiPS': 'text-green-600 dark:text-green-400'
            } %}
            <!-- Batting Playing-Time Misses -->
            <div class="mb-8">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Batting - Biggest PA Misses</h3>
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    {% for system in site.meta.projection_systems %}
                    <div class="bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-4">
                        <h4 class="text-lg font-medium {{ proj_colors[system] or 'text-gray-600 dark:text-gray-400' }} mb-4">{{ system }}</h4>
                        {% set statResults = null %}
                        {% for result in yearData.batting %}
                            {% if result.system == system and result.stat == 'PA' %}
                                {% set statResults = result %}
                            {% endif %}
                        {% endfor %}
                        {% if statResults and statResults.biggest_misses %}
                        <div class="relative overflow-x-auto">
                            <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-800 dark:text-gray-400">
                                    <tr>
                                        <th scope="col" class="px-4 py-2">Rank</th>
                                        <th scope="col" class="px-4 py-2">Player</th>
                                        <th scope="col" class="px-4 py-2 text-right">Proj</th>
                                        <th scope="col" class="px-4 py-2 text-right">Actual</th>
                                        <th scope="col" class="px-4 py-2 text-right">Error</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for miss in statResults.biggest_misses.slice(0, 10) %}
                                    <tr class="bg-white border-b dark:bg-gray-900 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                                        <td class="px-4 py-2 font-medium text-gray-900 dark:text-white font-mono">{{ loop.index }}</td>
                                        <td class="px-4 py-2">
                                            <a href="{{ ('/players/' + miss.player_id + '/') | url }}" class="text-blue-600 dark:text-blue-400 hover:underline">
                                                {{ miss.player_name }}
                                            </a>
                                        </td>
                                        <td class="px-4 py-2 font-mono text-right">{{ miss.projected | toFixed(1) }}</td>
                                        <td class="px-4 py-2 font-mono text-right">{{ miss.actual | toFixed(1) }}</td>
                                        <td class="px-4 py-2 font-semibold text-red-600 dark:text-red-400 font-mono text-right">{{ miss.error | toFixed(1) }}</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                        {% else %}
                        <p class="text-gray-500 dark:text-gray-400">No data available.</p>
                        {% endif %}
                    </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Rate Stats Misses -->
            {% for playerType in ['batting', 'pitching'] %}
            {% set rateStats = [
                'wOBA',
                'SO/PA', 'BB/PA', 'HBP/PA', 'HR/BIP',
                'BABIP', '1B/(BIP-HR)', '2B/(BIP-HR)', '3B/(BIP-HR)',
                'R/PA', 'RBI/PA', 'SB/TOF',
                'AVG', 'OBP', 'SLG'
            ] if playerType == 'batting' else [
                'wOBA',
                'SO/BF', 'BB/BF', 'HBP/BF', 'HR/BIP',
                'BABIP', '1B/(BIP-HR)', '2B/(BIP-HR)', '3B/(BIP-HR)',
                'R/BF', 'ER/BF', 'W/G', 'L/G', 'SV/G', 'HLD/G',
                'ERA', 'WHIP'
            ] %}
            {% for stat in rateStats %}
            <div class="mb-8">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">{{ playerType | title }} - Biggest {{ stat }} Misses (weighted league-adjusted)</h3>
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    {% for system in site.meta.projection_systems %}
                    <div class="bg-white dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 p-4">
                        <h4 class="text-lg font-medium {{ proj_colors[system] or 'text-gray-600 dark:text-gray-400' }} mb-4">{{ system }}</h4>
                        {% set statResults = null %}
                        {% for result in yearData[playerType] %}
                            {% if result.system == system and result.stat == stat %}
                                {% set statResults = result %}
                            {% endif %}
                        {% endfor %}
                        {% if statResults and statResults.biggest_misses %}
                        <div class="relative overflow-x-auto">
                            <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-800 dark:text-gray-400">
                                    <tr>
                                        <th scope="col" class="px-4 py-2">Rank</th>
                                        <th scope="col" class="px-4 py-2">Player</th>
                                        <th scope="col" class="px-4 py-2 text-right">Proj</th>
                                        <th scope="col" class="px-4 py-2 text-right">Actual</th>
                                        <th scope="col" class="px-4 py-2 text-right">Error</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for miss in statResults.biggest_misses.slice(0, 10) %}
                                    <tr class="bg-white border-b dark:bg-gray-900 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                                        <td class="px-4 py-2 font-medium text-gray-900 dark:text-white font-mono">{{ loop.index }}</td>
                                        <td class="px-4 py-2">
                                            <a href="{{ ('/players/' + miss.player_id + '/') | url }}" class="text-blue-600 dark:text-blue-400 hover:underline">
                                                {{ miss.player_name }}
                                            </a>
                                        </td>
                                        <td class="px-4 py-2 font-mono text-right">{{ miss.projected | toFixed(1) }}</td>
                                        <td class="px-4 py-2 font-mono text-right">{{ miss.actual | toFixed(1) }}</td>
                                        <td class="px-4 py-2 font-semibold text-red-600 dark:text-red-400 font-mono text-right">{{ miss.error | toFixed(3) }}</td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                        {% else %}
                        <p class="text-gray-500 dark:text-gray-400">No data available.</p>
                        {% endif %}
                    </div>
                    {% endfor %}
                </div>
            </div>
            {% endfor %}
            {% endfor %}
        {% endif %}
    </div>

</div>

{% block scripts %}
<script>
    {% include "chart-utils.js" %}
    {% include "season-charts.js" %}
    document.addEventListener('DOMContentLoaded', function() {
        initializeSeasonCharts({{ years[year] | dump | safe }}, {{ site.meta.projection_systems | dump | safe }});
        initializeChartFilters();
    });

    function initializeChartFilters() {
        const chartSections = document.querySelectorAll('.chart-section');

        chartSections.forEach(section => {
            const metricSelect = section.querySelector('.metric-select');
            const adjustmentSelect = section.querySelector('.adjustment-select');

            function updateVisibility() {
                const selectedMetric = metricSelect.value;
                const selectedAdjustment = adjustmentSelect ? adjustmentSelect.value : 'raw';

                const chartContainers = section.querySelectorAll('.chart-container');
                chartContainers.forEach(container => {
                    const chartMetric = container.dataset.metric;
                    const chartAdjustment = container.dataset.adjustment;
                    const shouldShow = chartMetric === selectedMetric && chartAdjustment === selectedAdjustment;
                    container.style.display = shouldShow ? 'block' : 'none';
                });
            }

            metricSelect.addEventListener('change', updateVisibility);
            if (adjustmentSelect) {
                adjustmentSelect.addEventListener('change', updateVisibility);
            }

            updateVisibility();
        });
    }
</script>
{% endblock %}